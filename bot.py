from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

TOKEN = os.getenv("TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# === –ú–ï–ù–Æ ===
def get_main_menu():
    keyboard = [
        ["üç∫ –ü—Ä–∞–π—Å—ã"],
        ["üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"],
        ["‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_category_menu():
    keyboard = [
        ["üç∫ –ü–∏–≤–æ"],
        ["üçé –°–∏–¥—Ä"],
        ["ü•§ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ"],
        ["‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏"],
        ["üîô –ù–∞–∑–∞–¥"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_beer_menu():
    keyboard = [
        ["–ö—Ä—É–ø–Ω—ã–µ –±—Ä–µ–Ω–¥—ã"],
        ["–õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–∏–≤–æ–≤–∞—Ä–Ω–∏"],
        ["–°–µ–∑–æ–Ω–Ω–æ–µ –ø–∏–≤–æ"],
        ["üîô –ù–∞–∑–∞–¥ –≤ –ü—Ä–∞–π—Å—ã"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_cider_menu():
    keyboard = [
        ["–†–æ—Å—Å–∏–π—Å–∫–∏–π —Å–∏–¥—Ä"],
        ["–ò–º–ø–æ—Ä—Ç–Ω—ã–π —Å–∏–¥—Ä"],
        ["üîô –ù–∞–∑–∞–¥ –≤ –ü—Ä–∞–π—Å—ã"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_soft_menu():
    keyboard = [
        ["–õ–∏–º–æ–Ω–∞–¥—ã"],
        ["–í–æ–¥–∞"],
        ["üîô –ù–∞–∑–∞–¥ –≤ –ü—Ä–∞–π—Å—ã"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_energy_menu():
    keyboard = [
        ["–ö—Ä—É–ø–Ω—ã–µ –±—Ä–µ–Ω–¥—ã"],
        ["–õ–æ–∫–∞–ª—å–Ω—ã–µ/–Ω–æ–≤–∏–Ω–∫–∏"],
        ["üîô –ù–∞–∑–∞–¥ –≤ –ü—Ä–∞–π—Å—ã"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# === /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ë–∏—Ä–º–∞—Ä–∫–µ—Ç –ù–°–ö* üçª\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
        reply_markup=get_main_menu(),
        parse_mode="Markdown"
    )

# === –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    print(f"–ù–∞–∂–∞—Ç–æ: {text}")

    if text == "üç∫ –ü—Ä–∞–π—Å—ã":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_category_menu())

    elif text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º":
        try:
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å!\n–û—Ç: {update.effective_user.full_name}\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{update.effective_user.username}"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É: {e}")

        await update.message.reply_text(
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:\n\n"
            "üì± @your_manager\n"
            "üìû +7 (913) XXX-XX-XX\n\n"
            "–ú—ã —É–∂–µ –∑–Ω–∞–µ–º ‚Äî –æ—Ç–≤–µ—Ç–∏–º –∑–∞ 15 –º–∏–Ω—É—Ç ‚è≥"
        )

    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await update.message.reply_text(
            "‚ÑπÔ∏è *–ü–æ–º–æ—â—å*\n\n"
            "–ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç:\n"
            "‚Ä¢ –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å—ã\n"
            "‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n\n"
            "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –ø–∏—à–∏—Ç–µ @your_manager",
            parse_mode="Markdown"
        )

    elif text == "üîô –ù–∞–∑–∞–¥":
        await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu())

    elif text == "üîô –ù–∞–∑–∞–¥ –≤ –ü—Ä–∞–π—Å—ã":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_category_menu())

    # === –ü–∏–≤–æ ===
    elif text == "üç∫ –ü–∏–≤–æ":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:", reply_markup=get_beer_menu())

    elif text == "–ö—Ä—É–ø–Ω—ã–µ –±—Ä–µ–Ω–¥—ã":
        await update.message.reply_document(document=open("files/beer_large.pdf", "rb"))
    elif text == "–õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–∏–≤–æ–≤–∞—Ä–Ω–∏":
        await update.message.reply_document(document=open("files/beer_local.pdf", "rb"))
    elif text == "–°–µ–∑–æ–Ω–Ω–æ–µ –ø–∏–≤–æ":
        await update.message.reply_document(document=open("files/beer_seasonal.pdf", "rb"))

    # === –°–∏–¥—Ä ===
    elif text == "üçé –°–∏–¥—Ä":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:", reply_markup=get_cider_menu())

    elif text == "–†–æ—Å—Å–∏–π—Å–∫–∏–π —Å–∏–¥—Ä":
        await update.message.reply_document(document=open("files/cider_russia.pdf", "rb"))
    elif text == "–ò–º–ø–æ—Ä—Ç–Ω—ã–π —Å–∏–¥—Ä":
        await update.message.reply_document(document=open("files/cider_import.pdf", "rb"))

    # === –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ ===
    elif text == "ü•§ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ:", reply_markup=get_soft_menu())

    elif text == "–õ–∏–º–æ–Ω–∞–¥—ã":
        await update.message.reply_document(document=open("files/soft_lemonade.pdf", "rb"))
    elif text == "–í–æ–¥–∞":
        await update.message.reply_document(document=open("files/soft_water.pdf", "rb"))

    # === –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ ===
    elif text == "‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ:", reply_markup=get_energy_menu())

    elif text == "–ö—Ä—É–ø–Ω—ã–µ –±—Ä–µ–Ω–¥—ã":
        await update.message.reply_document(document=open("files/energy_large.pdf", "rb"))
    elif text == "–õ–æ–∫–∞–ª—å–Ω—ã–µ/–Ω–æ–≤–∏–Ω–∫–∏":
        await update.message.reply_document(document=open("files/energy_new.pdf", "rb"))

# === –ó–ê–ü–£–°–ö ===
if __name__ == "__main__":
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ /start –≤ Telegram.")
    application.run_polling()
