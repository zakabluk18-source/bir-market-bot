# bot.py ‚Äî –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π –±–æ—Ç —Å –∑–∞—è–≤–∫–∞–º–∏, –ø—Ä–∞–π—Å–∞–º–∏ –∏ –º–µ–Ω—é

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ ID
BOT_TOKEN = os.getenv("BOT_TOKEN")
YOUR_USER_ID = int(os.getenv("YOUR_USER_ID"))

if not BOT_TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env")
if not YOUR_USER_ID:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω YOUR_USER_ID –≤ —Ñ–∞–π–ª–µ .env")

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –∑–∞—è–≤–∫–∏
STATE_WAITING_NAME = "waiting_name"
STATE_WAITING_COMPANY = "waiting_company"
STATE_WAITING_PHONE = "waiting_phone"
STATE_WAITING_ORDER = "waiting_order"


# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_main_keyboard():
    keyboard = [
        [KeyboardButton("–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏")],
        [KeyboardButton("–ò–º–ø–æ—Ä—Ç–Ω–æ–µ –ø–∏–≤–æ")],
        [KeyboardButton("–ö—Ä–∞—Ñ—Ç-–ø–∏–≤–æ")],
        [KeyboardButton("üçé –°–∏–¥—Ä—ã")],
        [KeyboardButton("üö´üç∫ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–µ")],
        [KeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–≥–æ
def get_non_alcohol_keyboard():
    keyboard = [
        [KeyboardButton("üíß –í–æ–¥–∞")],
        [KeyboardButton("‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏")],
        [KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=get_main_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    # –ï—Å–ª–∏ –∏–¥—ë—Ç —Å–±–æ—Ä –∑–∞—è–≤–∫–∏ ‚Äî –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ —à–∞–≥–∞–º
    if context.user_data.get("state") == STATE_WAITING_NAME:
        context.user_data["name"] = text
        context.user_data["state"] = STATE_WAITING_COMPANY
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏:")

    elif context.user_data.get("state") == STATE_WAITING_COMPANY:
        context.user_data["company"] = text
        context.user_data["state"] = STATE_WAITING_PHONE
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: +7 999 123-45-67):")

    elif context.user_data.get("state") == STATE_WAITING_PHONE:
        context.user_data["phone"] = text
        context.user_data["state"] = STATE_WAITING_ORDER
        await update.message.reply_text(
            "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å? –£–∫–∞–∂–∏—Ç–µ:\n"
            "‚Äî –ö–∞—Ç–µ–≥–æ—Ä–∏—é\n"
            "‚Äî –û–±—ä—ë–º (–ª–∏—Ç—Ä—ã, —è—â–∏–∫–∏)\n"
            "‚Äî –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
        )

    elif context.user_data.get("state") == STATE_WAITING_ORDER:
        context.user_data["order"] = text

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
        name = context.user_data.get("name", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        company = context.user_data.get("company", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        phone = context.user_data.get("phone", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        order = context.user_data.get("order", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        time = update.message.date.strftime("%d.%m.%Y %H:%M")

        application_text = (
            "üÜï <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê</b>:\n\n"
            f"üë§ <b>–ò–º—è:</b> {name}\n"
            f"üè¢ <b>–ö–æ–º–ø–∞–Ω–∏—è:</b> {company}\n"
            f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
            f"üì¶ <b>–ó–∞–∫–∞–∑:</b> {order}\n"
            f"‚è± <b>–í—Ä–µ–º—è:</b> {time}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–±–µ –≤ –ª–∏—á–∫—É
        try:
            await context.bot.send_message(
                chat_id=YOUR_USER_ID,
                text=application_text,
                parse_mode="HTML"
            )
            await update.message.reply_text(
                "‚úÖ –°–ø–∞—Å–∏–±–æ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.\n"
                "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
            )
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏: {e}")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())
        context.user_data.clear()

    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    elif text == "–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏":
        keyboard = [
            [KeyboardButton("üç∫ –ë–∞–ª—Ç–∏–∫–∞")],
            [KeyboardButton("üåç ABInBev")],
            [KeyboardButton("üè≠ –û–ü–•")],
            [KeyboardButton("üì¶ –û–±—â–∏–π –ø—Ä–∞–π—Å")],
            [KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é:", reply_markup=reply_markup)

    elif text == "üì¶ –û–±—â–∏–π –ø—Ä–∞–π—Å":
        try:
            with open("prays/general.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ <b>–û–±—â–∏–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç</b>\n–í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ", parse_mode="HTML")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/general.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "–ò–º–ø–æ—Ä—Ç–Ω–æ–µ –ø–∏–≤–æ":
        try:
            with open("prays/import.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –ò–º–ø–æ—Ä—Ç–Ω–æ–µ –ø–∏–≤–æ")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/import.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "–ö—Ä–∞—Ñ—Ç-–ø–∏–≤–æ":
        try:
            with open("prays/craft.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –ö—Ä–∞—Ñ—Ç-–ø–∏–≤–æ")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/craft.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "üçé –°–∏–¥—Ä—ã":
        try:
            with open("prays/cider.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –°–∏–¥—Ä—ã")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/cider.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "üö´üç∫ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–µ":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_non_alcohol_keyboard())

    elif text == "üíß –í–æ–¥–∞":
        try:
            with open("prays/water.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –í–æ–¥–∞")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/water.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏":
        try:
            with open("prays/energy_drinks.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/energy_drinks.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É":
        context.user_data["state"] = STATE_WAITING_NAME
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

    elif text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text(
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:\n"
            "üìû +7 (999) 123-45-67\n"
            "üìß zakabluk18@yandex.ru",
            reply_markup=get_main_keyboard()
        )

    elif text == "üç∫ –ë–∞–ª—Ç–∏–∫–∞":
        try:
            with open("prays/baltika.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –ë–∞–ª—Ç–∏–∫–∞")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/baltika.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "üåç ABInBev":
        try:
            with open("prays/ab_inbev.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: ABInBev")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/ab_inbev.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "üè≠ –û–ü–•":
        try:
            with open("prays/oph.pdf", "rb") as pdf:
                await update.message.reply_document(pdf, caption="üìÑ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç: –û–ü–•")
        except FileNotFoundError:
            await update.message.reply_text("‚ùå –§–∞–π–ª prays/oph.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    elif text == "‚óÄÔ∏è –ù–∞–∑–∞–¥":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_main_keyboard())

    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.",
            reply_markup=get_main_keyboard()
        )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ /start –≤ Telegram.")
    from flask import Flask # pyright: ignore[reportMissingImports]
from threading import Thread

app = Flask('')

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç üöÄ"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –î–û –±–æ—Ç–∞
keep_alive()

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == "__main__":
    application = Application.builder().token(BOT_TOKEN).build()
    # ... —Ç–≤–æ–∏ —Ö–µ–Ω–¥–ª–µ—Ä—ã ...
    application.run_polling()
    app.run_polling()
